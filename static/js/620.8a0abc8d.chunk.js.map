{"version":3,"file":"static/js/620.8a0abc8d.chunk.js","mappings":"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","sources":["components/ControlPanelMail/ControlPanelMail.styled.js","components/ControlPanelMail/ControlPanelMail.jsx","components/ImapBox/ImapBox.styled.js","components/ImapForm/ImapForm.styled.jsx","components/CustomSelect/CustomSelect.styled.js","components/CustomSelect/CustomSelect.jsx","components/ColorPicker/ColorPicker.styled.js","components/ColorPicker/ColorPicker.jsx","components/ImapForm/ImapForm.jsx","components/AddImapModal/AddImapModal.jsx","components/ImapBox/ImapBox.jsx","pages/MailsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { BsBoxArrowInUp } from 'react-icons/bs';\nimport { FaTrashRestoreAlt } from 'react-icons/fa';\nimport { IoIosMailOpen } from 'react-icons/io';\nimport {\n  IoArrowBackCircle,\n  IoCaretBackSharp,\n  IoCaretForwardSharp,\n  IoMailUnreadSharp,\n  IoReloadCircleSharp,\n  IoSearch,\n  IoTrashSharp,\n} from 'react-icons/io5';\nimport { MdAddTask, MdCancel } from 'react-icons/md';\nimport { RiSpamFill } from 'react-icons/ri';\n\nexport const PanelContainer = styled.div`\n  color: var(--title-text-main-color);\n  background: var(--main-background-color);\n  width: 100%;\n  height: 39px;\n  padding: 3px;\n  margin-bottom: 3px;\n  font-size: 1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 10px;\n`;\nexport const BackIcon = styled(IoCaretBackSharp)`\n  color: currentColor;\n  width: 20px;\n  height: 20px;\n  opacity: ${props => (props.page === 'true' ? '1.0' : '0.5')};\n`;\nexport const ForvardIcon = styled(IoCaretForwardSharp)`\n  color: currentColor;\n  width: 20px;\n  height: 20px;\n  opacity: ${props => (props.page === 'true' ? '0.5' : '1')};\n`;\n\nexport const TotalCount = styled.span`\n  color: currentColor;\n  font-family: inherit;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.33;\n`;\nexport const FormSearch = styled.form`\n  position: absolute;\n  display: flex;\n  left: 56%;\n  align-items: center;\n  justify-content: start;\n  gap: 10px;\n  width: 200px;\n  height: 100%;\n`;\nexport const SearchInput = styled.input`\n  position: absolute;\n  background-color: var(--main-background-color);\n  border-color: var(--btn-border-color);\n  color: currentColor;\n  font-family: inherit;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.33;\n  outline: none;\n  height: 30px;\n  padding-left: 5px;\n  &.inactive-input {\n    width: 30px;\n    height: 30px;\n    left: 0;\n    border-radius: 50%;\n    transition: all 0.3s ease-in-out;\n    padding-right: 0;\n  }\n  &.active-input {\n    padding-right: 50px;\n    background-color: var(--auth-background-color);\n    width: 400px;\n    left: -100px;\n    transition: all 0.3s ease-in-out;\n    border-radius: 10px;\n  }\n`;\n\nexport const BackLinkIcon = styled(IoArrowBackCircle)`\n  width: 30px;\n  height: 30px;\n  ${props => (props.uid ? 'display:block' : 'display:none')}\n`;\nexport const CancelIcon = styled(MdCancel)`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  color: currentColor;\n  width: 20px;\n  height: 20px;\n  z-index: 1;\n  &.inactive-icon {\n    left: 5px;\n    opacity: 0;\n    transition: all 0.3s ease-in-out;\n  }\n  &.active-icon {\n    left: 275px;\n    opacity: 1;\n    transition: all 0.3s ease-in-out;\n  }\n`;\n\nexport const SearchIcon = styled(IoSearch)`\n  position: absolute;\n  top: 50%;\n\n  transform: translateY(-9px);\n  color: currentColor;\n  width: 20px;\n  height: 20px;\n  z-index: 2;\n\n  &.inactive-icon {\n    left: 5px;\n    transition: all 0.3s ease-in-out;\n  }\n  &.active-icon {\n    left: 250px;\n    transition: all 0.3s ease-in-out;\n  }\n`;\nexport const ButtonWrap = styled.div`\n  position: relative;\n  padding-left: ${props => (props.prv === 'false' ? '50px' : '5px')};\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  gap: 10px;\n`;\n\nexport const LoadIcon = styled(IoReloadCircleSharp)`\n  color: currentColor;\n  width: 28px;\n  height: 28px;\n`;\nexport const TrashIcon = styled(IoTrashSharp)`\n  display: ${props => (props.chekout === 0 ? 'none' : 'block')};\n  color: currentColor;\n  width: 24px;\n  height: 24px;\n`;\nexport const TrashRestoreIcon = styled(FaTrashRestoreAlt)`\n  display: ${props => (props.chekout === 0 ? 'none' : 'block')};\n  color: currentColor;\n  width: 24px;\n  height: 24px;\n`;\nexport const UnReadIcon = styled(IoMailUnreadSharp)`\n  display: ${props => (props.chekout === 0 ? 'none' : 'block')};\n  color: currentColor;\n  width: 26px;\n  height: 26px;\n`;\nexport const OpenIcon = styled(IoIosMailOpen)`\n  display: ${props => (props.chekout === 0 ? 'none' : 'block')};\n  color: currentColor;\n  width: 26px;\n  height: 26px;\n`;\nexport const TaskIcon = styled(MdAddTask)`\n  color: currentColor;\n  width: 24px;\n  height: 24px;\n`;\nexport const SpamIcon = styled(RiSpamFill)`\n  display: ${props => (props.chekout === 0 ? 'none' : 'block')};\n  color: currentColor;\n  width: 26px;\n  height: 26px;\n`;\nexport const UnSpamIcon = styled(BsBoxArrowInUp)`\n  display: ${props => (props.chekout === 0 ? 'none' : 'block')};\n  color: currentColor;\n  width: 24px;\n  height: 24px;\n`;\nexport const PageControl = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  gap: 15px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport {\n  BackIcon,\n  BackLinkIcon,\n  ButtonWrap,\n  CancelIcon,\n  FormSearch,\n  ForvardIcon,\n  LoadIcon,\n  OpenIcon,\n  PageControl,\n  PanelContainer,\n  SearchIcon,\n  SearchInput,\n  SpamIcon,\n  TaskIcon,\n  TotalCount,\n  TrashIcon,\n  TrashRestoreIcon,\n  UnReadIcon,\n  UnSpamIcon,\n} from './ControlPanelMail.styled';\nimport {\n  useLocation,\n  useNavigate,\n  useParams,\n  useSearchParams,\n} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  useGetEmailsFromSearchQuery,\n  useGetNewEmailsFromBoxMutation,\n} from 'redux/emails/emailsApi';\nimport { useSelector } from 'react-redux';\nimport { selectId, selectListBox } from 'redux/local/selectors';\nimport AddTaskModal from 'components/AddTaskModal/AddTaskModal';\nimport {\n  IconCheck,\n  InputCheck,\n  MailCheck,\n} from 'components/ListBox/Listbox.styled';\nimport { changeLocal } from 'redux/local/slice';\n\nconst ControlPanelMail = ({\n  box,\n  path,\n  itemPerPage,\n  setMailArray,\n  mailArray,\n  setCheckedMailArray,\n  checkedMailArray,\n  setAccentBox,\n  accentBox,\n  handleMove,\n  handleFlags,\n  handleDelete,\n}) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const listBox = useSelector(selectListBox);\n  const idStorage = useSelector(selectId);\n  const { uid, _id } = useParams();\n  const [getNewEmailsFromBox] = useGetNewEmailsFromBoxMutation();\n\n  const [searchVisible, setSearchVisible] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = Number(searchParams.get('page'));\n  const searchPam = searchParams.get('search');\n\n  const [newCount, setNewCount] = useState(box?.countMail);\n  const [searchValue, setSearchValue] = useState(searchPam ? searchPam : '');\n  const [isModalOpen, setModalOpen] = useState(false);\n  const { data: searchResults } = useGetEmailsFromSearchQuery(\n    { _id, path, search: searchPam },\n    { skip: !searchPam || uid }\n  );\n  useEffect(() => {\n    if (box) setNewCount(box?.countMail);\n  }, [box]);\n  const handleOpenModal = () => {\n    setModalOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    document.body.style.overflow = 'auto';\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!uid) {\n      const currentParams = Object.fromEntries(searchParams.entries());\n      if (searchValue) {\n        currentParams.search = searchValue;\n        setSearchParams(currentParams);\n      } else {\n        delete currentParams.search;\n      }\n      if (searchResults?.search === searchValue) {\n        setMailArray(searchResults?.searchResults?.listEmail);\n      }\n    } else {\n      if (searchValue) {\n        navigate(\n          `mailbox/${idStorage}?boxPath=${path}&page=1&search=${searchValue}`,\n          { state: { from: location } }\n        );\n        if (searchResults?.search === searchValue) {\n          setMailArray(searchResults?.searchResults?.listEmail);\n        }\n      }\n    }\n  };\n  const handleChange = e => {\n    const inputValue = e.target.value;\n\n    setSearchValue(inputValue);\n  };\n\n  useEffect(() => {\n    const searchQueryParam = searchParams.get('search');\n    if (searchQueryParam && searchQueryParam !== 'null') {\n      console.log('obj :>> ', searchQueryParam);\n      setSearchValue(searchQueryParam);\n    }\n  }, [searchParams]);\n  /* eslint-disable */\n  useEffect(() => {\n    if (path) setNewCount(box?.countMail);\n  }, [path]);\n\n  useEffect(() => {\n    if (!searchPam) {\n      setMailArray(box?.mailList);\n    }\n  }, [searchResults, searchPam]);\n  useEffect(() => {\n    if (searchResults) {\n      setMailArray(searchResults?.searchResults?.listEmail);\n      setNewCount(searchResults?.searchResults?.listEmail.length);\n    }\n  }, [searchResults]);\n\n  const handleAllChange = e => {\n    const isChecked = e.target.checked;\n    if (isChecked) {\n      setCheckedMailArray(\n        mailArray.filter(\n          elem =>\n            elem.id >=\n            (mailArray.length - 1 < page * itemPerPage - 1\n              ? mailArray[mailArray.length - 1]?.id\n              : mailArray[page * itemPerPage - 1]?.id)\n        )\n      );\n    } else {\n      setCheckedMailArray([]);\n    }\n  };\n  const handleLoad = async () => {\n    const newMail = await getNewEmailsFromBox({\n      _id,\n      path,\n      page,\n      uid: mailArray[0]?.id,\n    });\n\n    if (newMail?.data?.listEmail?.length > 1) {\n      setAccentBox(prev => {\n        const mailboxIndex = prev.mailboxes.findIndex(\n          elem => elem.path === path\n        );\n        const updatedMailboxes = [...prev.mailboxes]; // Створюємо копію масиву mailboxes\n        updatedMailboxes[mailboxIndex] = {\n          ...updatedMailboxes[mailboxIndex], // Копіюємо попередні властивості поштової скриньки\n          mailList: [\n            ...newMail?.data?.listEmail.slice(\n              0,\n              newMail?.data?.listEmail.length - 1\n            ),\n            ...mailArray,\n          ],\n          countMail: newMail?.data?.countMail,\n          countMailUnseen: newMail?.data?.countMailUnseen, // Оновлюємо mailList\n        };\n        dispatch(\n          changeLocal(\n            listBox.map(elem =>\n              elem._id === prev._id\n                ? { ...prev, mailboxes: updatedMailboxes }\n                : elem\n            )\n          )\n        );\n        return {\n          ...prev,\n          mailboxes: updatedMailboxes,\n        }; // Оновлюємо mailboxes в accentBox та повертаємо оновлений об'єкт accentBox\n      });\n    }\n  };\n\n  return (\n    <PanelContainer>\n      <ButtonWrap prv={(!_id).toString()}>\n        {_id ? (\n          <>\n            <InputCheck\n              type=\"checkbox\"\n              id={'aa'}\n              onChange={e => handleAllChange(e)}\n            />\n            <MailCheck htmlFor={'aa'} className=\"MailCheck panel\">\n              <IconCheck className=\"IconCheck\" />\n            </MailCheck>\n          </>\n        ) : null}\n\n        {!uid ? (\n          <LoadIcon onClick={handleLoad} />\n        ) : (\n          <BackLinkIcon\n            uid={uid}\n            onClick={() => {\n              if (searchPam) {\n                navigate(\n                  location.state?.from ??\n                    `mailbox/${idStorage}?boxPath=${path}&page=1&search=${searchPam}`,\n                  { state: { from: location } }\n                );\n              } else\n                navigate(\n                  location.state?.from ??\n                    `mailbox/${idStorage}?boxPath=${path}&page=1`,\n                  { state: { from: location } }\n                );\n            }}\n          />\n        )}\n        {!['Junk', '[Gmail]/Спам'].includes(path) ? (\n          <SpamIcon\n            chekout={checkedMailArray.length}\n            onClick={() => {\n              handleMove(\n                path,\n                accentBox?.mailboxes[\n                  accentBox?.mailboxes.findIndex(elem => elem.nameEn === 'Junk')\n                ]?.path\n              );\n            }}\n          />\n        ) : (\n          <UnSpamIcon\n            chekout={checkedMailArray.length}\n            onClick={() => {\n              handleMove(path, 'INBOX');\n            }}\n          />\n        )}\n\n        <TrashIcon\n          chekout={checkedMailArray.length}\n          onClick={() => {\n            !['Trash', '[Gmail]/Кошик'].includes(path)\n              ? handleMove(\n                  path,\n                  accentBox?.mailboxes[\n                    accentBox?.mailboxes.findIndex(\n                      elem => elem.nameEn === 'Trash'\n                    )\n                  ]?.path\n                )\n              : handleDelete(path);\n          }}\n        />\n        {!['Trash', '[Gmail]/Кошик'].includes(path) && (\n          <TrashRestoreIcon\n            chekout={checkedMailArray.length}\n            onClick={() => {\n              handleMove(path, 'INBOX');\n            }}\n          />\n        )}\n        <UnReadIcon\n          chekout={checkedMailArray.length}\n          onClick={() => {\n            handleFlags(false);\n          }}\n        />\n        <OpenIcon\n          chekout={checkedMailArray.length}\n          onClick={() => {\n            handleFlags(true);\n          }}\n        />\n        <TaskIcon onClick={handleOpenModal} />\n      </ButtonWrap>\n      <FormSearch onSubmit={handleSubmit}>\n        <SearchIcon\n          className={searchVisible ? 'active-icon' : 'inactive-icon'}\n          values={searchValue}\n          onClick={() => {\n            if (searchVisible) {\n              const currentParams = Object.fromEntries(searchParams.entries());\n              if (searchValue) {\n                currentParams.search = searchValue;\n                setSearchParams(currentParams);\n              } else {\n                delete currentParams.search;\n              }\n              if (searchResults?.search === searchValue) {\n                setMailArray(searchResults?.searchResults?.listEmail);\n              }\n            } else setSearchVisible(true);\n          }}\n        />\n        <CancelIcon\n          className={searchVisible ? 'active-icon' : 'inactive-icon'}\n          onClick={() => {\n            setSearchVisible(false);\n            const currentParams = Object.fromEntries(searchParams.entries());\n            delete currentParams.search;\n            setSearchParams(currentParams);\n            setSearchValue('');\n            setMailArray(box?.mailList);\n          }}\n        />\n        <SearchInput\n          value={searchValue}\n          onChange={handleChange}\n          className={searchVisible ? 'active-input' : 'inactive-input'}\n        />\n      </FormSearch>\n      <PageControl>\n        <TotalCount>\n          {uid\n            ? searchPam\n              ? mailArray.findIndex(elem => elem.id === Number(uid)) + 1\n              : newCount - Number(uid) + 1\n            : `${(page - 1) * itemPerPage + 1} - \n          ${page * itemPerPage > newCount ? newCount : page * itemPerPage}`}\n          {' з '}\n          {newCount}\n        </TotalCount>\n        <BackIcon\n          page={\n            uid\n              ? (\n                  (searchPam\n                    ? mailArray.findIndex(elem => elem.id === Number(uid))\n                    : Number(uid)) < newCount\n                ).toString()\n              : (page > 1).toString()\n          }\n          onClick={() => {\n            if (uid) {\n              if (!searchPam && Number(uid) >= newCount) return;\n              if (\n                searchPam &&\n                mailArray.findIndex(elem => elem.id === Number(uid)) === 0\n              ) {\n                return;\n              }\n              searchPam\n                ? navigate(\n                    `mail/${\n                      mailArray[\n                        mailArray.findIndex(elem => elem.id === Number(uid)) - 1\n                      ].id\n                    }?boxPath=${path}&page=${Math.ceil(\n                      (mailArray.findIndex(elem => elem.id === Number(uid)) +\n                        1) /\n                        50\n                    )}&search=${searchPam}`\n                  )\n                : navigate(\n                    `mail/${Number(uid) + 1}?boxPath=${path}&page=${Math.ceil(\n                      (newCount - Number(uid)) / 50\n                    )}`\n                  );\n            } else {\n              if (page <= 1) return;\n              setSearchParams(params => {\n                params.set('page', Number(page) - 1);\n                return params;\n              });\n            }\n          }}\n        />\n        <ForvardIcon\n          page={(uid\n            ? (Number(uid) <= 1).toString()\n            : (page - 1) * itemPerPage < newCount &&\n              page * itemPerPage >= newCount\n          ).toString()}\n          onClick={() => {\n            if (uid) {\n              if (Number(uid) <= 1) return;\n              if (\n                searchPam &&\n                mailArray.findIndex(elem => elem.id === Number(uid)) ===\n                  mailArray.length - 1\n              )\n                return;\n              searchPam\n                ? navigate(\n                    `mail/${\n                      mailArray[\n                        mailArray.findIndex(elem => elem.id === Number(uid)) + 1\n                      ].id\n                    }?boxPath=${path}&page=${Math.ceil(\n                      (mailArray.findIndex(elem => elem.id === Number(uid)) +\n                        1) /\n                        50\n                    )}&search=${searchPam}`\n                  )\n                : navigate(\n                    `mail/${Number(uid) - 1}?boxPath=${path}&page=${Math.ceil(\n                      (newCount - Number(uid) + 2) / 50\n                    )}`\n                  );\n            } else {\n              if (\n                (page - 1) * itemPerPage < newCount &&\n                page * itemPerPage >= newCount\n              )\n                return;\n              setSearchParams(params => {\n                params.set('page', page + 1);\n                return params;\n              });\n            }\n          }}\n        />\n      </PageControl>\n      {isModalOpen && <AddTaskModal onClose={handleCloseModal} />}\n    </PanelContainer>\n  );\n};\n\nexport default ControlPanelMail;\n","import styled from '@emotion/styled';\nimport {\n  SiGoogle,\n  SiYahoo,\n  SiMicrosoftoutlook,\n  SiApple,\n  SiProtonmail,\n  SiZoho,\n  SiMailgun,\n} from 'react-icons/si';\nimport { AiOutlineAppstoreAdd } from 'react-icons/ai';\nimport { BsFillBellFill } from 'react-icons/bs';\nimport { MdDeleteForever, MdSettingsSuggest } from 'react-icons/md';\n\nexport const ContainerL = styled.div`\n  height: 100%;\n  min-width: 100%;\n  position: relative;\n`;\nexport const ContainerWrapperL = styled.div`\n  padding: 0 32px;\n  height: 100%;\n  min-width: 100%;\n  box-sizing: border-box;\n  border-radius: 10px;\n\n  position: relative;\n  padding: 0 20px 40px;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 0 32px 32px;\n  }\n`;\nexport const Container = styled.div`\n  height: 120px;\n  width: 100%;\n  background: var(--main-background-color);\n  border-radius: 10px;\n  border: 1px solid var(--btn-border-color);\n  position: relative;\n`;\n\nexport const BoxList = styled.ul`\n  display: flex;\n  gap: 15px;\n  padding: 20px;\n  height: 100%;\n`;\nexport const SettingButton = styled(MdSettingsSuggest)`\n  position: absolute;\n  right: 25px;\n  top: 1px;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  color: currentColor;\n  opacity: 0;\n  transition: all 500ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\nexport const DeleteButton = styled(MdDeleteForever)`\n  position: absolute;\n  right: 0;\n  top: 0px;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  color: currentColor;\n  transition: all 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  opacity: 0;\n`;\nexport const WrapBoxCard = styled.li`\n  color: ${props => props.color};\n  width: 177px;\n  height: 100%;\n  ${props => (props.border ? 'opacity:1;' : 'opacity:0.6;')}\n  border: 3px solid ${props =>\n    props.border ? props.color : 'var(--btn-border-color)'};\n  border-radius: 10px;\n  position: relative;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:last-child {\n    width: 77px;\n  }\n  &:hover {\n    border: 3px solid\n      ${props => (props.color ? props.color : 'var(--btn-border-color)')};\n    box-shadow: 0 0 10px ${props => props.color};\n    opacity: 1;\n    .show {\n      opacity: 0.7;\n      &:hover {\n        opacity: 1;\n      }\n    }\n  }\n`;\nexport const BoxCard = styled.div`\n  display: flex;\n  gap: 5px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding: 5px;\n`;\n\nexport const ButtonCard = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background: none;\n  border: none;\n  cursor: pointer;\n`;\nexport const AddBox = styled(AiOutlineAppstoreAdd)`\n  width: 100%;\n  height: 100%;\n  color: var(--feedback-form-text);\n`;\n\nexport const IconBox = styled.div`\n  width: 100%;\n  height: 100%;\n  color: var(--feedback-form-text);\n`;\nexport const SiYahooI = styled(SiYahoo)`\n  width: 60%;\n  height: 60%;\n`;\nexport const SiGoogleI = styled(SiGoogle)`\n  width: 60%;\n  height: 60%;\n`;\nexport const SiMicrosoftoutlookI = styled(SiMicrosoftoutlook)`\n  width: 60%;\n  height: 60%;\n`;\nexport const SiAppleI = styled(SiApple)`\n  width: 60%;\n  height: 60%;\n`;\nexport const SiProtonmailI = styled(SiProtonmail)`\n  width: 60%;\n  height: 60%;\n`;\nexport const SiZohoI = styled(SiZoho)`\n  width: 60%;\n  height: 60%;\n`;\nexport const SiMailgunI = styled(SiMailgun)`\n  width: 60%;\n  height: 60%;\n`;\n\nexport const ShowP = styled.p`\n  font-family: inherit;\n  font-size: 14px;\n  font-weight: 600;\n  color: currentColor;\n  margin: 0 auto;\n`;\nexport const ShowSpan = styled(BsFillBellFill)`\n  position: absolute;\n  left: 1px;\n  top: 12px;\n  transform: translateY(-50%);\n  width: 20px;\n  height: 20px;\n  color: red;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border-top-left-radius: 50%;\n  border-top-right-radius: 50%;\n  border-bottom-left-radius: 10%;\n  border-bottom-right-radius: 10%;\n`;\nexport const ButtonSlideLeft = styled.button`\n  position: absolute;\n  left: -12px;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 28px;\n  height: 28px;\n  color: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: red;\n  border-radius: 50%;\n`;\nexport const ButtonSlideRight = styled.button`\n  position: absolute;\n  right: -12px;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 28px;\n  height: 28px;\n  color: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: red;\n  border-radius: 50%;\n`;\n","import styled from '@emotion/styled';\n\nimport {\n  SiGoogle,\n  SiYahoo,\n  SiMicrosoftoutlook,\n  SiApple,\n  SiProtonmail,\n  SiZoho,\n  SiMailgun,\n} from 'react-icons/si';\nimport { IoMdHelpCircle } from 'react-icons/io';\nexport const IoMdHelpCircleI = styled(IoMdHelpCircle)`\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.1);\n    color: var(--accent);\n  }\n`;\nexport const SiYahooI = styled(SiYahoo)`\n  width: 20px;\n  height: 20px;\n`;\nexport const SiGoogleI = styled(SiGoogle)`\n  width: 20px;\n  height: 20px;\n`;\nexport const SiMicrosoftoutlookI = styled(SiMicrosoftoutlook)`\n  width: 20px;\n  height: 20px;\n`;\nexport const SiAppleI = styled(SiApple)`\n  width: 20px;\n  height: 20px;\n`;\nexport const SiProtonmailI = styled(SiProtonmail)`\n  width: 20px;\n  height: 20px;\n`;\nexport const SiZohoI = styled(SiZoho)`\n  width: 20px;\n  height: 20px;\n`;\nexport const SiMailgunI = styled(SiMailgun)`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const FormWrapper = styled.div`\n  position: relative;\n  width: 450px;\n  margin: 0 auto;\n`;\n\nexport const FormTitle = styled.h2`\n  font-size: 1.5rem;\n  font-family: inherit;\n  font-weight: 600;\n  line-height: 1.33;\n  text-align: center;\n  color: var(--title-text-main-color);\n`;\n\nexport const FormGroup = styled.div`\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const FormGroupI = styled.div`\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n  gap: 10px;\n`;\nexport const Label = styled.label`\n  width: 180px;\n  font-size: 1rem;\n  color: var(--title-text-main-color);\n`;\n\nexport const Input = styled.input`\n  width: 60%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 1rem;\n  outline: none;\n`;\n\nexport const InputColor = styled.input`\n  width: 10%;\n\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 1rem;\n`;\n\nexport const SelectIcon = styled.select`\n  width: 60%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 1rem;\n`;\n\nexport const BtnWrapper = styled.div`\n  margin-top: 18px;\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const SettingsTitle = styled.h3`\n  font-size: 1.1rem;\n  font-family: inherit;\n  font-weight: 600;\n  line-height: 1.33;\n  text-align: center;\n  margin-bottom: 16px;\n  margin-bottom: 20px;\n  color: var(--title-text-main-color);\n`;\n\nexport const Btn = styled.button`\n  padding: 10px 20px;\n  border: none;\n  border-radius: 10px;\n  font-family: inherit;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.33;\n  cursor: pointer;\n  background-color: var(--accent-background-color);\n  color: var(--btn-text-color);\n  transition: background-color 0.3s;\n  :hover {\n    background: var(--active-btn-color);\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n\n  @media screen and (min-width: 375px) {\n    margin-right: 18px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 12px 32px;\n    font-size: 14px;\n    line-height: 1.28;\n    margin-right: 24px;\n  }\n`;\nexport const Checkbox = styled.input`\n  accent-color: var(--accent-background-color);\n  margin-right: 8px;\n  width: 20px;\n  height: 20px;\n`;\n","import styled from '@emotion/styled';\n\nexport const SelectContainer = styled.div`\n  position: relative;\n  width: 60%;\n`;\nexport const Span = styled.span`\n  position: absolute;\n  right: 10px;\n`;\nexport const StyledSelect = styled.div`\n  color: ${props => props.color};\n  background: #fff;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 10px;\n  font-size: 1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  gap: 10px;\n`;\n\nexport const OptionsContainer = styled.div`\n  display: ${props => (props.isOpen ? 'block' : 'none')};\n  position: absolute;\n  width: 100%;\n\n  z-index: 1;\n  top: 100%;\n  left: 0;\n  background: #fff;\n  border: 1px solid #ccc;\n  border-top: none;\n  border-radius: 0 0 4px 4px;\n  scroll: auto;\n  overflow: hidden;\n`;\n\nexport const Option = styled.div`\n  color: ${props => props.color};\n  padding: 10px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  gap: 10px;\n  &:hover {\n    background: #f2f2f2;\n  }\n`;\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  Option,\n  OptionsContainer,\n  SelectContainer,\n  Span,\n  StyledSelect,\n} from './CustomSelect.styled';\n\nconst CustomSelect = ({ options, selectedValue, onChange, color }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const selectRef = useRef(null);\n\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleOptionClick = value => {\n    onChange(value);\n    toggleDropdown();\n  };\n  const handleClickOutside = event => {\n    if (selectRef.current && !selectRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  };\n  useEffect(() => {\n    // Додаємо обробник кліку для документа при відкритті списку\n    if (isOpen) {\n      document.addEventListener('click', handleClickOutside);\n    } else {\n      document.removeEventListener('click', handleClickOutside);\n    }\n\n    // При зміні isOpen відписуємося від обробника кліку\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [isOpen]);\n  return (\n    <SelectContainer ref={selectRef}>\n      <StyledSelect color={color} onClick={toggleDropdown}>\n        {options.find(option => option.value === selectedValue)?.icon}\n        {options.find(option => option.value === selectedValue)?.label}\n        <Span className={`arrow ${isOpen ? 'open' : ''}`}>&#9660;</Span>\n      </StyledSelect>\n      <OptionsContainer isOpen={isOpen}>\n        {options.map(option => (\n          <Option\n            color={color}\n            key={option.value}\n            onClick={() => handleOptionClick(option.value)}\n          >\n            {option.icon} {option.label}\n          </Option>\n        ))}\n      </OptionsContainer>\n    </SelectContainer>\n  );\n};\n\nexport default CustomSelect;\n","import styled from '@emotion/styled';\n\nexport const SelectContainer = styled.div`\n  position: relative;\n  width: 60%;\n`;\nexport const Span = styled.span`\n  position: absolute;\n  right: 10px;\n`;\nexport const StyledSelect = styled.div`\n  background: #fff;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 10px;\n  font-size: 1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  gap: 10px;\n`;\n\nexport const OptionsContainer = styled.div`\n  display: ${props => (props.isOpen ? 'block' : 'none')};\n  position: absolute;\n  width: 100%;\n\n  z-index: 1;\n  top: 100%;\n  left: 0;\n  background: #fff;\n  border: 1px solid #ccc;\n  border-top: none;\n  border-radius: 0 0 4px 4px;\n  scroll: auto;\n  overflow: hidden;\n`;\n\nexport const Option = styled.div`\n  padding: 10px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  gap: 10px;\n  &:hover {\n    background: #f2f2f2;\n  }\n`;\nexport const OptionBox = styled.div`\n  position: absolute;\n  z-index: 2;\n  width: 260px;\n  height: 90px;\n  background: var(--main-background-color);\n  box-shadow: 2px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 10px;\n`;\n","import React, { useState } from 'react';\nimport { CirclePicker } from 'react-color'; // Імпортуйте компонент відповідного пікера\nimport { OptionBox } from './ColorPicker.styled';\n\nconst ColorPicker = ({ color, onChange }) => {\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n\n  const handleColorChange = newColor => {\n    onChange(newColor.hex); // Передавайте HEX значення кольору\n  };\n  const defaultColors = [\n    '#f44336',\n    '#e91e63',\n    '#9c27b0',\n    '#673ab7',\n    '#3f51b5',\n    '#2196f3',\n    '#00bcd4',\n    '#009688',\n    '#4caf50',\n    '#8bc34a',\n    '#ff9800',\n    '#ff5722',\n  ];\n\n  return (\n    <div>\n      <div\n        style={{\n          background: color,\n          width: '25px',\n          height: '25px',\n          borderRadius: '50%',\n          cursor: 'pointer',\n        }}\n        onClick={() => setDisplayColorPicker(!displayColorPicker)}\n      ></div>\n      {displayColorPicker ? (\n        <OptionBox>\n          <div\n            onClick={() => setDisplayColorPicker(false)}\n            style={{\n              position: 'fixed',\n              top: '0px',\n              right: '0px',\n              bottom: '0px',\n              left: '0px',\n            }}\n          />\n          <CirclePicker\n            colors={defaultColors}\n            color={color}\n            width={'260px'}\n            onChange={handleColorChange}\n          />\n        </OptionBox>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ColorPicker;\n","import { useTranslation } from 'react-i18next';\nimport React, { useState } from 'react';\nimport {\n  FormWrapper,\n  FormTitle,\n  FormGroup,\n  Label,\n  Input,\n  BtnWrapper,\n  Btn,\n  Checkbox,\n  SiGoogleI,\n  SiYahooI,\n  SiMicrosoftoutlookI,\n  SiAppleI,\n  SiProtonmailI,\n  SiZohoI,\n  SiMailgunI,\n  FormGroupI,\n  SettingsTitle,\n} from './ImapForm.styled';\nimport {\n  useCreateImapEmailMutation,\n  useEditImapEmailMutation,\n} from '../../redux/emails/emailsApi';\nimport CustomSelect from 'components/CustomSelect/CustomSelect';\nimport ColorPicker from 'components/ColorPicker';\nimport { showErrorToast, showSuccessToast } from 'utils/showToast';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { selectListBox } from 'redux/local/selectors';\n\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { changeLocal } from 'redux/local/slice';\nimport { override } from 'components/Bandero-goose/ImageAnimation.styled';\nimport { MoonLoader } from 'react-spinners';\n\nconst ImapForm = ({\n  onClose,\n  initialSettings,\n  setMailBoxArray,\n  setAccentBox,\n}) => {\n  const { t } = useTranslation();\n  const listBox = useSelector(selectListBox);\n  const { _id } = useParams();\n  const navigate = useNavigate();\n  const [color, setColor] = useState(initialSettings?.color || '#007bff');\n  const [icon, setIcon] = useState(\n    initialSettings?.iconBox || 'mailbox-icon-7'\n  );\n  const location = useLocation();\n  console.log('initialSettings :>> ', initialSettings);\n  const dispatch = useDispatch();\n  const [host, setHost] = useState(initialSettings?.host || 'imap.gmail.com');\n  const [port, setPort] = useState(initialSettings?.port || '993');\n  const [username, setUsername] = useState(initialSettings?.email || '');\n  const [pass, setPass] = useState('');\n  const [secure, setSecure] = useState(initialSettings?.secure && true);\n  const [smtpSecure, setSmtpSecure] = useState(\n    initialSettings?.smtpSecure && true\n  );\n  const [smtpHost, setSmtpHost] = useState(\n    initialSettings?.smtpHost || 'smtp.gmail.com'\n  );\n  const [smtpPort, setSmtpPort] = useState(initialSettings?.smtpPort || '587');\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('Початкове завантаження даних');\n  const [createImapEmail] = useCreateImapEmailMutation();\n  const [editImapEmail] = useEditImapEmailMutation();\n\n  const iconOptions = [\n    { value: 'mailbox-icon-1', label: 'Gmail', icon: <SiGoogleI /> },\n    { value: 'mailbox-icon-2', label: 'Yahoo', icon: <SiYahooI /> },\n    {\n      value: 'mailbox-icon-3',\n      label: 'Outlook',\n      icon: <SiMicrosoftoutlookI />,\n    },\n    { value: 'mailbox-icon-4', label: 'Apple', icon: <SiAppleI /> },\n    { value: 'mailbox-icon-5', label: 'Proton', icon: <SiProtonmailI /> },\n    { value: 'mailbox-icon-6', label: 'Zoho', icon: <SiZohoI /> },\n    { value: 'mailbox-icon-7', label: 'Mail', icon: <SiMailgunI /> },\n  ];\n\n  const handleSave = async () => {\n    const newSettings = {\n      iconBox: icon,\n      color,\n      host,\n      port: Number(port),\n      email: username,\n      pass,\n      secure,\n      smtpSecure,\n      smtpHost,\n      smtpPort: Number(smtpPort),\n    };\n    setIsLoading(true);\n    // Створюємо новий об'єкт, який містить лише поля зі змінами порівняно з initialSettings\n\n    // Додайте сюди поля для SMTP налаштувань\n\n    try {\n      if (initialSettings) {\n        setMessage('Зміни в конфігурації');\n        setIsLoading(true);\n        const changedSettings = {};\n        for (const key in newSettings) {\n          if (newSettings[key] !== initialSettings[key]) {\n            if (key === 'pass' && pass.trim() === '') {\n              continue;\n            }\n            changedSettings[key] = newSettings[key];\n          }\n        }\n\n        const editBox = await editImapEmail({\n          id: initialSettings._id,\n          ...changedSettings,\n        });\n        if (_id === initialSettings._id) {\n          setAccentBox(editBox.data?.data);\n        }\n        dispatch(\n          changeLocal(\n            listBox.map(elem => {\n              if (elem._id === initialSettings._id) {\n                return editBox.data?.data;\n              } else {\n                return elem;\n              }\n            })\n          )\n        );\n        setMailBoxArray(prev =>\n          prev.map(elem => {\n            if (elem._id === initialSettings._id) {\n              return editBox.data?.data;\n            } else {\n              return elem;\n            }\n          })\n        );\n\n        showSuccessToast(t('addtask.succ1'));\n      } else {\n        // Тут виконайте ваш запит на створення нових налаштувань, використовуючи changedSettings\n        setMessage('Початкове завантаження даних');\n        setIsLoading(true);\n        const newBox = await createImapEmail(newSettings);\n        if (newBox.data.hasOwnProperty('error')) {\n          showErrorToast(t('addtask.err4'));\n          return;\n        }\n        setMailBoxArray(prev => [...prev, newBox.data?.data]);\n        showSuccessToast(t('addtask.succ2'));\n        if (_id === 'id') setAccentBox(newBox.data?.data);\n        navigate(\n          `mailbox/${newBox.data?.data?._id}?boxPath=${newBox.data?.data?.mailboxes[0]?.path}&page=1`,\n          { state: { from: location } }\n        );\n      }\n      onClose();\n    } catch (error) {\n      showErrorToast(t('addtask.err3'));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <FormWrapper>\n        <FormGroupI>\n          <FormTitle>Налаштування поштової адреси</FormTitle>\n        </FormGroupI>\n\n        <FormGroup>\n          <Label htmlFor=\"icon\">Іконка:</Label>\n          <CustomSelect // Використовуємо кастомний селект\n            options={iconOptions}\n            color={color}\n            selectedValue={icon}\n            onChange={setIcon}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"color\">Колір піктограми:</Label>\n          <ColorPicker color={color} onChange={setColor} />\n          <Label htmlFor=\"useTls\">Використовувати TLS:</Label>\n          <Checkbox\n            type=\"checkbox\"\n            id=\"useTls\"\n            name=\"useTls\"\n            checked={secure}\n            onChange={e => setSecure(e.target.checked)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"username\">Поштова адреса:</Label>\n          <Input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n          />\n        </FormGroup>\n        <SettingsTitle>Налаштування IMAP</SettingsTitle>\n        <FormGroup>\n          <Label htmlFor=\"host\">Хост:</Label>\n          <Input\n            type=\"text\"\n            id=\"host\"\n            name=\"host\"\n            value={host}\n            onChange={e => setHost(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"port\">Порт:</Label>\n          <Input\n            type=\"text\"\n            id=\"port\"\n            name=\"port\"\n            value={port}\n            onChange={e => setPort(e.target.value)}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"pass\">Пароль для додатків:</Label>\n          <Input\n            type=\"password\"\n            id=\"pass\"\n            name=\"pass\"\n            value={pass}\n            onChange={e => setPass(e.target.value)}\n          />\n        </FormGroup>\n        <SettingsTitle>Налаштування SMPT</SettingsTitle>\n        <FormGroup>\n          <Label htmlFor=\"smtpHost\">Хост:</Label>\n          <Input\n            type=\"text\"\n            id=\"smtpHost\"\n            name=\"smtpHost\"\n            value={smtpHost}\n            onChange={e => setSmtpHost(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"smtpPort\">Порт</Label>\n          <Input\n            type=\"text\"\n            id=\"smtpPort\"\n            name=\"smtpPort\"\n            value={smtpPort}\n            onChange={e => setSmtpPort(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup style={{ justifyContent: 'flex-end', gap: '15px' }}>\n          <Label htmlFor=\"useSls\">Використовувати SSL:</Label>\n          <Checkbox\n            type=\"checkbox\"\n            id=\"useSls\"\n            name=\"useSls\"\n            checked={smtpSecure}\n            onChange={e => setSmtpSecure(e.target.checked)}\n          />\n        </FormGroup>\n        <BtnWrapper>\n          <Btn onClick={onClose}>Скасувати</Btn>\n          <Btn onClick={handleSave}>\n            {initialSettings ? 'Змінити' : 'Зберегти'}\n          </Btn>\n        </BtnWrapper>\n      </FormWrapper>\n      {isLoading ? (\n        <div\n          style={{\n            top: '0',\n            width: '100%',\n            height: '100%',\n            position: 'absolute',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            zIndex: 20,\n            background: 'rgba(0, 0, 0, 0.5)',\n          }}\n        >\n          <MoonLoader color=\"#fff\" loading={true} css={override} size={100} />\n          <h4 style={{ backgroundColor: 'rgba(256,256,256,0.5)' }}>\n            {message}\n          </h4>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default ImapForm;\n","import React from 'react';\nimport Modal from '../Modal';\nimport ImapForm from 'components/ImapForm';\n\nconst AddImapModal = ({\n  onClose,\n  initialSettings,\n  setMailBoxArray,\n  accentBox,\n  setAccentBox,\n}) => {\n  return (\n    <Modal onClose={onClose}>\n      <ImapForm\n        onClose={onClose}\n        initialSettings={initialSettings}\n        setMailBoxArray={setMailBoxArray}\n        accentBox={accentBox}\n        setAccentBox={setAccentBox}\n      />\n    </Modal>\n  );\n};\n\nexport default AddImapModal;\n","import { useTranslation } from 'react-i18next';\nimport React, { useState } from 'react';\nimport {\n  AddBox,\n  BoxCard,\n  BoxList,\n  ButtonCard,\n  ButtonSlideLeft,\n  ButtonSlideRight,\n  Container,\n  DeleteButton,\n  SettingButton,\n  ShowP,\n  // ShowSpan,\n  SiAppleI,\n  SiGoogleI,\n  SiMailgunI,\n  SiMicrosoftoutlookI,\n  SiProtonmailI,\n  SiYahooI,\n  SiZohoI,\n  WrapBoxCard,\n} from './ImapBox.styled';\n\nimport AddImapModal from 'components/AddImapModal';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useDeleteImapEmailMutation } from 'redux/emails/emailsApi';\nimport { showSuccessToast } from 'utils/showToast';\nimport { useDispatch } from 'react-redux';\nimport { changeId, changePath } from 'redux/local/slice';\n\nconst ImapBox = ({\n  mailBoxArray,\n  setMailBoxArray,\n  accentBox,\n  setAccentBox,\n  setColor,\n  setCheckedMailArray,\n}) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [deleteImapEmail] = useDeleteImapEmailMutation();\n  const iconOptions = [\n    { value: 'mailbox-icon-1', label: 'Gmail', icon: <SiGoogleI /> },\n    { value: 'mailbox-icon-2', label: 'Yahoo', icon: <SiYahooI /> },\n    {\n      value: 'mailbox-icon-3',\n      label: 'Outlook',\n      icon: <SiMicrosoftoutlookI />,\n    },\n    { value: 'mailbox-icon-4', label: 'Apple', icon: <SiAppleI /> },\n    { value: 'mailbox-icon-5', label: 'Proton', icon: <SiProtonmailI /> },\n    { value: 'mailbox-icon-6', label: 'Zoho', icon: <SiZohoI /> },\n    { value: 'mailbox-icon-7', label: 'Mail', icon: <SiMailgunI /> },\n  ];\n  const [totalContainers] = useState(mailBoxArray?.length);\n  const [containersPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(0);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [initialSettings, setInitialSettings] = useState(null);\n  // const [totalPagesContain, setTotalPagesContain] = useState(\n  //   mailBoxArray?.length % containersPerPage === 0\n  //     ? mailBoxArray?.length / containersPerPage + 1\n  //     : Math.ceil(mailBoxArray?.length / containersPerPage)\n  // );\n\n  const [isModalOpen, setModalOpen] = useState(false);\n  const totalPages =\n    totalContainers % containersPerPage === 0\n      ? totalContainers / containersPerPage + 1\n      : Math.ceil(totalContainers / containersPerPage);\n  const handleDelete = async id => {\n    const length = mailBoxArray.length;\n    deleteImapEmail(id);\n    showSuccessToast(t('addtask.succ3'));\n    const newArrayBox = mailBoxArray.filter(elem => elem._id !== id);\n\n    setMailBoxArray(newArrayBox);\n    if (length === 1) {\n      setAccentBox({});\n      dispatch(changeId(null));\n      dispatch(changePath(null));\n      navigate(`mailbox/id`, { state: { from: location } });\n      return;\n    }\n\n    if (accentBox._id === id) {\n      dispatch(changeId(newArrayBox[0]._id));\n      dispatch(changePath(newArrayBox[0].mailboxes[0].path));\n      setAccentBox(newArrayBox[0]);\n      navigate(\n        `mailbox/${newArrayBox[0]._id}?boxPath=${newArrayBox[0].mailboxes[0].path}&page=1`,\n        { state: { from: location } }\n      );\n    }\n  };\n  const handleOpenModal = () => {\n    setInitialSettings(null);\n    setModalOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n  const handleEditModal = elem => {\n    setInitialSettings(elem);\n    setModalOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    document.body.style.overflow = 'auto';\n  };\n  const handlePreviousPage = () => {\n    setCurrentPage(currentPage - 1);\n  };\n\n  const handleNextPage = () => {\n    setCurrentPage(currentPage + 1);\n  };\n  // const handleTotalContainersDec = () => {\n  //   setTotalContainers(totalContainers - 1);\n  // };\n\n  // const handleTotalContainersAdd = () => {\n  //   setTotalContainers(totalContainers + 1);\n  // };\n  return (\n    <>\n      <Container>\n        <ButtonSlideLeft\n          onClick={handlePreviousPage}\n          style={{\n            display: currentPage > 0 ? 'block' : 'none',\n          }}\n        >\n          {'<'}{' '}\n        </ButtonSlideLeft>\n        <BoxList>\n          {mailBoxArray?.map((elem, i) => {\n            const iconIndex = iconOptions.findIndex(\n              option => option.value === elem.iconBox\n            );\n\n            return (\n              <WrapBoxCard\n                key={elem.NumId}\n                color={elem.color}\n                border={elem.NumId === accentBox?.NumId}\n              >\n                <BoxCard\n                  onClick={() => {\n                    dispatch(changeId(elem._id));\n                    dispatch(changePath(elem.mailboxes[0].path));\n                    setAccentBox(elem);\n                    setColor(elem.color);\n                    if (elem._id !== accentBox._id) {\n                      setCheckedMailArray([]);\n                    }\n                    navigate(\n                      `mailbox/${elem._id}?boxPath=${elem.mailboxes[0].path}&page=1`,\n                      { state: { from: location } }\n                    );\n                  }}\n                  style={{\n                    display:\n                      i >= currentPage * containersPerPage &&\n                      i < (currentPage + 1) * containersPerPage\n                        ? 'flex'\n                        : 'none',\n                  }}\n                >\n                  {iconIndex !== -1 ? iconOptions[iconIndex].icon : null}\n                  <ShowP>{elem.email}</ShowP>\n                </BoxCard>\n                <SettingButton\n                  className=\"show\"\n                  onClick={() => handleEditModal(elem)}\n                />\n                <DeleteButton\n                  className=\"show\"\n                  onClick={() => handleDelete(elem._id)}\n                />\n                {/* <ShowSpan messade={{}} /> */}\n              </WrapBoxCard>\n            );\n          })}\n          <WrapBoxCard>\n            <BoxCard\n              style={{\n                display: currentPage >= totalPages - 1 ? 'block' : 'none',\n              }}\n            >\n              <ButtonCard onClick={handleOpenModal}>\n                <AddBox />\n              </ButtonCard>\n            </BoxCard>\n          </WrapBoxCard>\n        </BoxList>\n        <ButtonSlideRight\n          onClick={handleNextPage}\n          style={{\n            display: currentPage < totalPages - 1 ? 'block' : 'none',\n          }}\n        >\n          {'>'}{' '}\n        </ButtonSlideRight>\n        {isModalOpen && (\n          <AddImapModal\n            onClose={handleCloseModal}\n            initialSettings={initialSettings}\n            setMailBoxArray={setMailBoxArray}\n            accentBox={accentBox}\n            setAccentBox={setAccentBox}\n          />\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default ImapBox;\n","// import { useTranslation, Trans } from 'react-i18next';\n\nimport ImageAnimation from 'components/Bandero-goose/ImageAnimation';\nimport ControlPanelMail from 'components/ControlPanelMail';\nimport ImapBox from 'components/ImapBox';\nimport {\n  CategoriesItem,\n  CategoriesList,\n  CategoriesListWrap,\n  CategoriesTitle,\n  ContainerL,\n  ContainerWrapperL,\n  CreateIcon,\n  Mailbox,\n  MailboxWrap,\n  MailboxWraper,\n  NameBox,\n  SendButton,\n  UnseenBox,\n} from 'components/ListBox/Listbox.styled.js';\nimport { Suspense, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport {\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n  useSearchParams,\n} from 'react-router-dom';\nimport { selectUser } from 'redux/auth/selectors';\nimport {\n  useGetAllBoxQuery,\n  useGetEmailsFromBoxQuery,\n  useDeleteEmailMutation,\n  useFlagsEmailMutation,\n  useMoveEmailMutation,\n} from 'redux/emails/emailsApi';\nimport {\n  selectId,\n  selectListBox,\n  selectPage,\n  selectPath,\n} from 'redux/local/selectors';\nimport { changeId, changeLocal, changePath } from 'redux/local/slice';\n\nconst MailsPage = () => {\n  // const { t } = useTranslation();\n  const location = useLocation();\n  const { itemPerPage } = useSelector(selectUser);\n  const boxStorage = useSelector(selectListBox);\n  const [deleteEmail] = useDeleteEmailMutation();\n  const [moveEmail] = useMoveEmailMutation();\n  const [flagsEmail] = useFlagsEmailMutation();\n  const idStorage = useSelector(selectId);\n  const pathStorage = useSelector(selectPath);\n  const pageStorage = useSelector(selectPage);\n  const dispatch = useDispatch();\n  const { data: allListBox } = useGetAllBoxQuery();\n  const { _id, uid, uids } = useParams();\n  // console.log('_id :>> ', _id);\n  const [searchParams] = useSearchParams();\n  const path = searchParams.get('boxPath');\n  const [serverPage, setServerPage] = useState(1);\n  const page = Number(searchParams.get('page'));\n  const search = searchParams.get('search');\n  const { data: allList, refetch } = useGetEmailsFromBoxQuery(\n    {\n      _id,\n      path,\n      page: serverPage,\n    },\n    {\n      skip:\n        _id === 'id' ||\n        _id === null ||\n        _id === undefined ||\n        path == null ||\n        (page !== 1 && (page + 8) % 10 !== 0 && page % 10 !== 0) ||\n        !!search,\n    }\n  );\n\n  const [params] = useSearchParams();\n  const boxPath = params.get('boxPath') || '';\n  const [allBoxes, setAllBoxes] = useState(boxStorage);\n  const [accentBox, setAccentBox] = useState(\n    boxStorage.find(elem => elem._id === idStorage) && {}\n  ); // Кількість контейнерів, які відображаються одночасно\n  const [color, setColor] = useState(\n    boxStorage.find(elem => elem._id === idStorage)?.color\n  );\n  const [mailArray, setMailArray] = useState(\n    boxStorage\n      ?.find(elem => elem._id === idStorage)\n      ?.mailboxes?.find(elem => elem.path === pathStorage)?.mailList\n  );\n  const [checkedMailArray, setCheckedMailArray] = useState([]);\n  const [dataD, setDataD] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log('checkedMailArray :>> ', checkedMailArray);\n    console.log(\n      'checkedMailArray.filter(elem => !elem.unseen).length :>> ',\n      checkedMailArray.filter(elem => elem.unseen === 'false').length\n    );\n  }, [checkedMailArray]);\n  useEffect(() => {\n    if (page === 1) setServerPage(page);\n    if ((page + 8) % 10 === 0) setServerPage((page + 8) / 10 + 1);\n  }, [page]);\n  /* eslint-disable */\n  useEffect(() => {\n    if (allListBox !== undefined) {\n      const {\n        data: { listImap },\n      } = allListBox;\n      dispatch(changeLocal(listImap));\n      setAllBoxes(listImap || []);\n\n      if (listImap.length === 0) {\n        dispatch(changeLocal([]));\n        dispatch(changeId(null));\n        dispatch(changePath(null));\n\n        navigate(`mailbox/id`, { state: { from: location } });\n      } else {\n        dispatch(changeLocal(listImap));\n        setAllBoxes(listImap || []);\n        if (\n          !idStorage ||\n          listImap.findIndex(elem => elem._id === idStorage) === -1\n        ) {\n          console.log('asdada2 :>> ');\n          dispatch(changeId(listImap[0]._id));\n          dispatch(changePath(listImap[0].mailboxes[0].path));\n          setAccentBox(listImap[0]);\n          setColor(listImap[0]?.color);\n        } else {\n          console.log('asdada3 :>> ');\n          setAccentBox(boxStorage.find(elem => elem._id === idStorage));\n          setColor(boxStorage.find(elem => elem._id === idStorage).color);\n        }\n        if (\n          !pathStorage &&\n          listImap\n            .find(elem => elem.id === idStorage)\n            ?.mailboxes.findIndex(elem => elem.path === pathStorage) === -1\n        ) {\n          dispatch(changePath(listImap[0].mailboxes[0].path));\n        }\n        if (_id) {\n          navigate(\n            `mailbox/${idStorage || listImap[0]._id}?boxPath=${\n              pathStorage || listImap[0].mailboxes[0].path\n            }&page=${pageStorage || 1}`,\n            { state: { from: location } }\n          );\n        }\n        if (!_id && !uid && !uids)\n          navigate(\n            `mailbox/${idStorage || listImap[0]._id}?boxPath=${\n              pathStorage || listImap[0].mailboxes[0].path\n            }&page=${pageStorage || 1}`,\n            { state: { from: location } }\n          );\n      }\n    }\n  }, [allListBox]);\n\n  useEffect(() => {\n    if (idStorage && pageStorage && pathStorage) {\n      setAccentBox(boxStorage.find(elem => elem._id === idStorage));\n      setColor(boxStorage.find(elem => elem._id === idStorage).color);\n      navigate(\n        `mailbox/${idStorage}?boxPath=${pathStorage}&page=${pageStorage}`,\n        { state: { from: location } }\n      );\n    }\n  }, []);\n  /* eslint-disable */\n  useEffect(() => {\n    if (allList && allBoxes) {\n      refetch();\n      const indexBox = allBoxes.findIndex(box => box._id === allList._id);\n      const indexMailBox = accentBox?.mailboxes?.findIndex(\n        box => box.path === allList.path\n      );\n\n      if (indexBox !== -1 && indexMailBox !== -1) {\n        const newMessages = allList.listEmail;\n        const updatedAllBoxes = allBoxes.map(box => {\n          if (box._id === allList._id) {\n            return {\n              ...box,\n              mailboxes: box.mailboxes.map(mailBox => {\n                if (mailBox.path === allList.path) {\n                  const existingMessages = mailBox.mailList;\n                  const uniqueMessages = newMessages.filter(\n                    message =>\n                      !existingMessages.some(\n                        existingMessage => existingMessage.id === message.id\n                      )\n                  );\n\n                  const newMailList =\n                    allList.page === '1'\n                      ? [...newMessages].sort((a, b) => b.id - a.id)\n                      : [...existingMessages, ...uniqueMessages].sort(\n                          (a, b) => b.id - a.id\n                        );\n\n                  // Сортування за спаданням ID\n                  newMailList.sort((a, b) => b.id - a.id);\n\n                  return {\n                    ...mailBox,\n                    countMailUnseen: allList.countMailUnseen,\n                    countMail: allList.countMail,\n                    mailList: newMailList,\n                  };\n                }\n                return mailBox;\n              }),\n            };\n          }\n          return box;\n        });\n\n        dispatch(changeLocal(updatedAllBoxes));\n        setAllBoxes(updatedAllBoxes);\n\n        if (accentBox._id === allList._id) {\n          setAccentBox(updatedAllBoxes[indexBox]);\n          console.log('viiiii :>> ');\n        }\n      }\n    }\n  }, [allList]);\n\n  useEffect(() => {\n    if (!search) {\n      setMailArray(\n        accentBox?.mailboxes?.find(elem => elem.path === path)?.mailList\n      );\n    }\n  }, [accentBox, path]);\n  useEffect(() => {\n    if (!search) {\n      console.log('Прийшла Заміна:>> ', accentBox);\n      dispatch(\n        changeLocal(\n          boxStorage.map(elem => {\n            if (elem._id === accentBox._id) {\n              return accentBox;\n            }\n            return elem;\n          })\n        )\n      );\n      setAllBoxes(\n        boxStorage.map(elem => {\n          if (elem._id === accentBox._id) {\n            return accentBox;\n          }\n          return elem;\n        })\n      );\n      setColor(accentBox?.color);\n      setMailArray(\n        accentBox?.mailboxes?.find(elem => elem.path === path)?.mailList\n      );\n    }\n  }, [accentBox]);\n  const handleNavigate = id => {\n    search\n      ? navigate(\n          `mail/${id}?boxPath=${path}&page=${Math.ceil(\n            (mailArray.findIndex(elem => elem.id === Number(id)) + 1) / 50\n          )}&search=${search}`,\n          {\n            state: { from: location },\n          }\n        )\n      : navigate(`mail/${id}?boxPath=${path}&page=${page}`, {\n          state: { from: location },\n        });\n  };\n  const handleNavigateNew = (boolean, uid) => {\n    boolean\n      ? navigate(\n          `newmail/${_id}?boxPath=${path}&page=${page}&upsend=true&uid=${uid}`,\n          {\n            state: { from: location },\n          }\n        )\n      : navigate(\n          `newmail/${accentBox?._id}?boxPath=${path}&page=${page}&resend=true`,\n          {\n            state: { from: location },\n          }\n        );\n  };\n\n  const handleMove = async (fromPath, toPath, uids) => {\n    const newArray = !uids ? checkedMailArray.map(elem => elem.id) : [uids.id];\n    await moveEmail({\n      _id,\n      fromPath,\n      toPath,\n      mailList: newArray,\n    });\n\n    setAccentBox(prev => {\n      const mailboxIndexFrom = prev.mailboxes.findIndex(\n        elem => elem.path === fromPath\n      );\n      const mailboxIndexTo = prev.mailboxes.findIndex(\n        elem => elem.path === toPath\n      );\n\n      const updatedMailboxes = [...prev.mailboxes];\n      updatedMailboxes[mailboxIndexFrom] = {\n        ...updatedMailboxes[mailboxIndexFrom],\n        mailList: updatedMailboxes[mailboxIndexFrom].mailList\n          .filter(elem => !newArray.includes(elem.id))\n          .map(elem => {\n            return {\n              ...elem,\n              id:\n                elem.id -\n                newArray.filter(el => {\n                  return el < elem.id;\n                }).length,\n            };\n          }),\n        countMail:\n          updatedMailboxes[mailboxIndexFrom].countMail - newArray.length,\n        countMailUnseen:\n          updatedMailboxes[mailboxIndexFrom].countMailUnseen -\n          (!uids\n            ? checkedMailArray.filter(elem => {\n                return elem.unseen === true;\n              }).length\n            : uids.unseen === true\n            ? 1\n            : 0), // Оновлюємо mailList\n      };\n\n      updatedMailboxes[mailboxIndexTo] = {\n        ...updatedMailboxes[mailboxIndexTo],\n        mailList: [\n          ...updatedMailboxes[mailboxIndexTo].mailList,\n          ...(uids ? [uids] : checkedMailArray),\n        ]\n          .sort((a, b) => new Date(b.date) - new Date(a.date))\n          .map((elem, index) => {\n            return {\n              ...elem,\n              id:\n                updatedMailboxes[mailboxIndexTo].countMail +\n                newArray.length -\n                index,\n            };\n          }),\n        countMail: updatedMailboxes[mailboxIndexTo].countMail + newArray.length,\n        countMailUnseen:\n          updatedMailboxes[mailboxIndexTo].countMailUnseen +\n          (!uids\n            ? checkedMailArray.filter(elem => {\n                return elem.unseen === true;\n              }).length\n            : uids.unseen === true\n            ? 1\n            : 0), // Оновлюємо mailList\n      };\n\n      setCheckedMailArray([]);\n      return {\n        ...prev,\n        mailboxes: updatedMailboxes,\n      }; // Оновлюємо mailboxes в accentBox та повертаємо оновлений об'єкт accentBox\n    });\n  };\n\n  const handleFlags = async (bool, uids) => {\n    if (\n      checkedMailArray.filter(elem => elem.unseen === !bool).length ===\n        checkedMailArray.length &&\n      uid\n    )\n      return;\n\n    const newArray = !uids ? checkedMailArray.map(elem => elem.id) : [uids.id];\n    flagsEmail({\n      _id,\n      path,\n      mailList: newArray,\n      seen: !bool,\n    });\n\n    setAccentBox(prev => {\n      const mailboxIndex = prev.mailboxes.findIndex(elem => elem.path === path);\n\n      const updatedMailboxes = [...prev.mailboxes];\n      updatedMailboxes[mailboxIndex] = {\n        ...updatedMailboxes[mailboxIndex],\n        mailList: updatedMailboxes[mailboxIndex].mailList.map(elem => {\n          if (newArray.includes(elem.id)) return { ...elem, unseen: !bool };\n          return elem;\n        }),\n        countMailUnseen: bool\n          ? updatedMailboxes[mailboxIndex].countMailUnseen -\n            (!uids\n              ? checkedMailArray.filter(elem => {\n                  return elem.unseen === true;\n                }).length\n              : uids.unseen === true\n              ? 1\n              : 0)\n          : updatedMailboxes[mailboxIndex].countMailUnseen +\n            (!uids\n              ? checkedMailArray.filter(elem => {\n                  return elem.unseen === false;\n                }).length\n              : uids.unseen === false\n              ? 1\n              : 0), // Оновлюємо mail\n      };\n\n      setCheckedMailArray([]);\n      return {\n        ...prev,\n        mailboxes: updatedMailboxes,\n      }; // Оновлюємо mailboxes в accentBox та повертаємо оновлений об'єкт accentBox\n    });\n  };\n  const handleDelete = async (path, uids) => {\n    const newArray = !uids ? checkedMailArray.map(elem => elem.id) : [uids.id];\n    await deleteEmail({\n      _id,\n      path,\n      mailList: newArray,\n    });\n\n    setAccentBox(prev => {\n      const mailboxIndex = prev.mailboxes.findIndex(elem => elem.path === path);\n\n      const updatedMailboxes = [...prev.mailboxes];\n      updatedMailboxes[mailboxIndex] = {\n        ...updatedMailboxes[mailboxIndex],\n        mailList: updatedMailboxes[mailboxIndex].mailList\n          .filter(elem => !newArray.includes(elem.id))\n          .map(elem => {\n            return {\n              ...elem,\n              id:\n                elem.id -\n                newArray.filter(el => {\n                  return el < elem.id;\n                }).length,\n            };\n          }),\n        countMail: updatedMailboxes[mailboxIndex].countMail - newArray.length,\n        countMailUnseen:\n          updatedMailboxes[mailboxIndex].countMailUnseen -\n          (!uids\n            ? checkedMailArray.filter(elem => {\n                return elem.unseen === true;\n              }).length\n            : uids.unseen === true\n            ? 1\n            : 0), // Оновлюємо mailList\n      };\n\n      setCheckedMailArray([]);\n      return {\n        ...prev,\n        mailboxes: updatedMailboxes,\n      }; // Оновлюємо mailboxes в accentBox та повертаємо оновлений об'єкт accentBox\n    });\n  };\n  return (\n    <ContainerWrapperL>\n      <ContainerL>\n        <ImapBox\n          mailBoxArray={allBoxes}\n          setMailBoxArray={setAllBoxes}\n          accentBox={accentBox}\n          setAccentBox={setAccentBox}\n          setColor={setColor}\n          setCheckedMailArray={setCheckedMailArray}\n        />\n        <MailboxWraper>\n          <CategoriesListWrap>\n            <CategoriesTitle color={accentBox?.color}>\n              {accentBox?.email}\n            </CategoriesTitle>\n            <CategoriesList>\n              {accentBox?.mailboxes?.map(\n                ({ _id, path, nameUa, countMailUnseen }) => (\n                  <CategoriesItem\n                    key={_id}\n                    color={color}\n                    active={path === boxPath}\n                    onClick={() => {\n                      dispatch(changePath(path));\n                      if (path !== boxPath) {\n                        setCheckedMailArray([]);\n                      }\n                      navigate(\n                        `mailbox/${accentBox?._id}?boxPath=${path}&page=1`,\n                        { state: { from: location } }\n                      );\n                    }}\n                  >\n                    <NameBox>{nameUa}</NameBox>\n\n                    <UnseenBox>\n                      {countMailUnseen === 0 ? '' : countMailUnseen}\n                    </UnseenBox>\n                  </CategoriesItem>\n                )\n              )}\n              <CategoriesItem ids={_id} color={color}>\n                <SendButton\n                  to={`newmail/${\n                    _id ? _id : uids\n                  }?boxPath=${path}&page=1&resend=false&upsend=true`}\n                  state={{ from: location }}\n                  color={color}\n                >\n                  {' '}\n                  Написати\n                  <CreateIcon />\n                </SendButton>\n              </CategoriesItem>\n            </CategoriesList>\n          </CategoriesListWrap>\n\n          <MailboxWrap>\n            {uid || _id ? (\n              <ControlPanelMail\n                box={accentBox?.mailboxes?.find(\n                  mailBox => mailBox.path === boxPath\n                )}\n                path={boxPath}\n                itemPerPage={itemPerPage}\n                setMailArray={setMailArray}\n                mailArray={mailArray}\n                setCheckedMailArray={setCheckedMailArray}\n                checkedMailArray={checkedMailArray}\n                setAccentBox={setAccentBox}\n                accentBox={accentBox}\n                handleMove={handleMove}\n                handleFlags={handleFlags}\n                handleDelete={handleDelete}\n              />\n            ) : null}{' '}\n            <Mailbox uids={(!uids).toString()} ids={_id}>\n              <Suspense fallback={<ImageAnimation />}>\n                <Outlet\n                  context={[\n                    mailArray,\n                    accentBox,\n                    handleNavigate,\n                    setCheckedMailArray,\n                    checkedMailArray,\n                    color,\n                    handleNavigateNew,\n                    dataD,\n                    setDataD,\n                    handleMove,\n                    handleFlags,\n                    handleDelete,\n                  ]}\n                />\n              </Suspense>\n            </Mailbox>\n          </MailboxWrap>\n        </MailboxWraper>\n      </ContainerL>\n    </ContainerWrapperL>\n  );\n};\n\nexport default MailsPage;\n"],"names":["PanelContainer","styled","div","_templateObject","_taggedTemplateLiteral","BackIcon","IoCaretBackSharp","_templateObject2","props","page","ForvardIcon","IoCaretForwardSharp","_templateObject3","TotalCount","span","_templateObject4","FormSearch","form","_templateObject5","SearchInput","input","_templateObject6","BackLinkIcon","IoArrowBackCircle","_templateObject7","uid","CancelIcon","MdCancel","_templateObject8","SearchIcon","IoSearch","_templateObject9","ButtonWrap","_templateObject10","prv","LoadIcon","IoReloadCircleSharp","_templateObject11","TrashIcon","IoTrashSharp","_templateObject12","chekout","TrashRestoreIcon","FaTrashRestoreAlt","_templateObject13","UnReadIcon","IoMailUnreadSharp","_templateObject14","OpenIcon","IoIosMailOpen","_templateObject15","TaskIcon","MdAddTask","_templateObject16","SpamIcon","RiSpamFill","_templateObject17","UnSpamIcon","BsBoxArrowInUp","_templateObject18","PageControl","_templateObject19","_ref","box","path","itemPerPage","setMailArray","mailArray","setCheckedMailArray","checkedMailArray","setAccentBox","accentBox","handleMove","handleFlags","handleDelete","location","useLocation","navigate","useNavigate","dispatch","useDispatch","listBox","useSelector","selectListBox","idStorage","selectId","_useParams","useParams","_id","_useGetNewEmailsFromB","useGetNewEmailsFromBoxMutation","getNewEmailsFromBox","_slicedToArray","_useState","useState","_useState2","searchVisible","setSearchVisible","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","Number","get","searchPam","_useState3","countMail","_useState4","newCount","setNewCount","_useState5","_useState6","searchValue","setSearchValue","_useState7","_useState8","isModalOpen","setModalOpen","searchResults","useGetEmailsFromSearchQuery","search","skip","data","useEffect","searchQueryParam","console","log","mailList","_searchResults$search3","_searchResults$search4","listEmail","length","handleLoad","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_mailArray$","_newMail$data","_newMail$data$listEma","newMail","wrap","_context","prev","next","id","sent","_newMail$data2","_newMail$data3","_newMail$data4","_newMail$data5","mailboxIndex","mailboxes","findIndex","elem","updatedMailboxes","_toConsumableArray","_objectSpread","concat","slice","countMailUnseen","changeLocal","map","stop","apply","arguments","_jsxs","children","toString","_Fragment","_jsx","InputCheck","type","onChange","e","isChecked","target","checked","filter","_mailArray","_mailArray2","handleAllChange","MailCheck","htmlFor","className","IconCheck","onClick","_location$state$from2","_location$state2","_location$state$from","_location$state","state","from","includes","_accentBox$mailboxes$","nameEn","_accentBox$mailboxes$2","document","body","style","overflow","onSubmit","preventDefault","_searchResults$search2","_searchResults$search","currentParams","Object","fromEntries","entries","values","_searchResults$search5","value","inputValue","Math","ceil","params","set","AddTaskModal","onClose","Container","BoxList","ul","SettingButton","MdSettingsSuggest","DeleteButton","MdDeleteForever","WrapBoxCard","li","color","border","BoxCard","ButtonCard","button","AddBox","AiOutlineAppstoreAdd","SiYahooI","SiYahoo","SiGoogleI","SiGoogle","SiMicrosoftoutlookI","SiMicrosoftoutlook","SiAppleI","SiApple","SiProtonmailI","SiProtonmail","SiZohoI","SiZoho","SiMailgunI","SiMailgun","ShowP","p","ButtonSlideLeft","BsFillBellFill","_templateObject20","_templateObject21","ButtonSlideRight","_templateObject22","IoMdHelpCircle","FormWrapper","FormTitle","h2","FormGroup","FormGroupI","Label","label","Input","BtnWrapper","select","SettingsTitle","h3","Btn","Checkbox","SelectContainer","Span","StyledSelect","OptionsContainer","isOpen","Option","_options$find","_options$find2","options","selectedValue","setIsOpen","selectRef","useRef","toggleDropdown","handleClickOutside","event","current","contains","addEventListener","removeEventListener","ref","find","option","icon","OptionBox","displayColorPicker","setDisplayColorPicker","background","width","height","borderRadius","cursor","position","top","right","bottom","left","CirclePicker","colors","newColor","hex","initialSettings","setMailBoxArray","t","useTranslation","setColor","iconBox","setIcon","host","setHost","port","setPort","_useState9","email","_useState10","username","setUsername","_useState11","_useState12","pass","setPass","_useState13","secure","_useState14","setSecure","_useState15","smtpSecure","_useState16","setSmtpSecure","_useState17","smtpHost","_useState18","setSmtpHost","_useState19","smtpPort","_useState20","setSmtpPort","_useState21","_useState22","isLoading","setIsLoading","_useState23","_useState24","message","setMessage","_useCreateImapEmailMu","useCreateImapEmailMutation","createImapEmail","_useEditImapEmailMuta","useEditImapEmailMutation","editImapEmail","iconOptions","handleSave","newSettings","changedSettings","key","editBox","_editBox$data","_newBox$data2","_newBox$data3","_newBox$data3$data","_newBox$data4","_newBox$data4$data","_newBox$data4$data$ma","newBox","t0","keys","t1","done","trim","abrupt","_editBox$data2","_editBox$data3","showSuccessToast","hasOwnProperty","showErrorToast","_newBox$data","t2","finish","CustomSelect","ColorPicker","name","justifyContent","gap","display","flexDirection","alignItems","zIndex","MoonLoader","loading","css","override","size","backgroundColor","Modal","ImapForm","mailBoxArray","_useDeleteImapEmailMu","useDeleteImapEmailMutation","deleteImapEmail","totalContainers","containersPerPage","currentPage","setCurrentPage","setInitialSettings","totalPages","newArrayBox","changeId","changePath","_x","i","iconIndex","NumId","handleEditModal","AddImapModal","_boxStorage$find","_boxStorage$find2","_boxStorage$find2$mai","_boxStorage$find2$mai2","_accentBox$mailboxes6","_accentBox$mailboxes7","selectUser","boxStorage","_useDeleteEmailMutati","useDeleteEmailMutation","deleteEmail","_useMoveEmailMutation","useMoveEmailMutation","moveEmail","_useFlagsEmailMutatio","useFlagsEmailMutation","flagsEmail","pathStorage","selectPath","pageStorage","selectPage","allListBox","useGetAllBoxQuery","uids","serverPage","setServerPage","_useGetEmailsFromBoxQ","useGetEmailsFromBoxQuery","undefined","allList","refetch","_useSearchParams3","boxPath","allBoxes","setAllBoxes","dataD","setDataD","unseen","listImap","_listImap$find","_listImap$","_accentBox$mailboxes","indexBox","indexMailBox","newMessages","updatedAllBoxes","mailBox","existingMessages","uniqueMessages","some","existingMessage","newMailList","sort","a","b","_accentBox$mailboxes2","_accentBox$mailboxes3","_accentBox$mailboxes4","_accentBox$mailboxes5","fromPath","toPath","newArray","mailboxIndexFrom","mailboxIndexTo","el","Date","date","index","_x2","_x3","_callee2","bool","_context2","seen","_x4","_x5","_ref3","_callee3","_context3","_x6","_x7","ContainerWrapperL","ContainerL","ImapBox","MailboxWraper","CategoriesListWrap","CategoriesTitle","CategoriesList","_ref4","nameUa","CategoriesItem","active","NameBox","UnseenBox","ids","SendButton","to","CreateIcon","MailboxWrap","ControlPanelMail","Mailbox","Suspense","fallback","ImageAnimation","Outlet","context","boolean"],"sourceRoot":""}